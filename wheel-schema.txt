pypi:
    project: str
    version: str
    download_url:
    uploaded: timestamp
    # Don't record has_sig, as PyPI doesn't expose that anymore.

wheelodex:
    scanned: <timestamp>  # date added to this database
    wheelodex_version:  # for ease of rescanning on wheelodex updates

data:
    filename: str
    project: str
    version: str
    [other fields extractable from wheel filename]
    verifies: bool  # whether RECORD is accurate (cf. distlib's Wheel.verify())
    verify_error:  # optional
        type: str
        str: str

    file:
        size:
        digests:
            md5:
            sha256:

    dist_info:
        metadata:
            # Straight JSONification of METADATA (cf. PEP 566)
            # `keywords` is a string
            # `description` is a dict with a "length" key (to save space)
            # Unknown fields are included
        wheel:  # information from WHEEL
            # If this has a body, it's stored in a BODY field (possibly
            # converted to a dict with "length"?)
        entry_points:
            $key: [str]
        record: ...
        # wheel signatures?

        # dist-info files copied from egg-info
        # <https://setuptools.readthedocs.io/en/latest/formats.html>:
        top_level: [str]
        namespace_packages: ???
        dependency_links: ???
        zip_safe: ???

    derived:
        # Various statistics about irregularities etc. that cannot be (easily)
        # derived from the other fields:
        # - whether tags (and name & version?) in filename match those in WHEEL?
        # - whether keywords are space- or comma-separated
        # - whether Description is a header field or the body
        # - whether the README renders properly

        keywords:  # split list of keywords
        keyword_separator: ',' | ' ' | null  # null = no keywords field
        readme_renders: bool
        # flags as boolean fields

        # list of all module names
        # list of projects that this wheel depends on, either conditionally or unconditionally
        # list of extras?

_links:  # API-only; does this belong here?
    package
    version

# vim:set et sts=4:
